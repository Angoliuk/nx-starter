name: Deploy api

on:
  workflow_call:
    inputs:
      pnpmPath:
        required: true
        type: string
      pnpmKeysPrefix:
        required: true
        type: string

jobs:
  build:
    runs-on: [self-hosted, api]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}

      # - name: Get Secrets by Name and by ARN
      #   run: |
      #     aws secretsmanager get-secret-value --secret-id api | \
      #     jq -r '.SecretString' | \
      #     jq -r "to_entries|map(\"\(.key)=\\\"\(.value|tostring)\\\"\")|.[]" > ./apps/api/.env

      # - uses: ./.github/actions/base-setup

      # - uses: ./.github/actions/install-dependencies
      #   with:
      #     pnpmKeysPrefix: ${{inputs.pnpmKeysPrefix}}
      #     pnpmPath: ${{inputs.pnpmPath}}

      - name: SSH EC2
        env:
          PRIVATE_KEY: ${{ secrets.API_SSH_PRIVATE_KEY }}
          HOSTNAME: ${{secrets.API_SSH_HOST}}
          USER_NAME: ${{secrets.API_USER_NAME}}
          PROJECT_ROOT_ROUTE: ${{secrets.API_PROJECT_ROOT_ROUTE}}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 400 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
              cd ${PROJECT_ROOT_ROUTE} &&
              git pull &&
              pnpm i &&
              pnpm nx pm2 api
              '
