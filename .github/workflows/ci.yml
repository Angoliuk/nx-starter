name: ci

on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - "**"

jobs:
  variables:
    runs-on: ubuntu-latest
    steps:
      - uses: nrwl/nx-set-shas@v3

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Fetching git
        run: git fetch

      - name: Getting head
        run: |
          echo "head=HEAD" >> $GITHUB_ENV

      - name: Getting base
        run: |
          echo "base=${{ github.event.pull_request.base.ref }}" >> $GITHUB_ENV

      - name: Get pnpm store directory
        run: |
          echo "storePath=$(pnpm store path --silent)" >> $GITHUB_ENV

    outputs:
      base: ${{ env.base }}
      head: ${{ env.head }}
      flags: --base=origin/${{ env.base }} --head=${{ env.head }}
      pnpmPath: ${{ env.storePath }}
      pnpmKeysPrefix: ${{ runner.os }}-pnpm-store-

  ci:
    runs-on: ubuntu-latest
    needs: variables
    steps:
      - name: Adding variables to env
        run: echo "variables=${{ needs.variables.outputs }}" >> $GITHUB_ENV

      - name: Adding variables to env
        run: echo ${{ env.variables }}

      - uses: nrwl/nx-set-shas@v3

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Fetching git
        run: git fetch

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.variables.pnpmPath }}
          key: ${{ env.variables.pnpmKeysPrefix }}${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ env.variables.pnpmKeysPrefix }}

      - name: Install dependencies
        run: pnpm install

      - name: Install NX
        run: pnpm install -g nx

      - name: Code style
        run: nx format:check ${{ env.variables.flags }}

      - name: Lint
        run: nx affected --target=lint ${{ env.variables.flags }}

      - name: Prisma Generation
        run: nx generate-types db

      - name: Build
        run: nx affected --target=build ${{ env.variables.flags }}
