name: ci

on:
  workflow_call:
    inputs:
      pnpmPath:
        required: true
        type: string
      pnpmKeysPrefix:
        required: true
        type: string
      flags:
        required: true
        type: string
    outputs:
      isBuildPassed:
        value: ${{jobs.ci.outputs.isBuildPassed}}
      isLintPassed:
        value: ${{jobs.ci.outputs.isLintPassed}}
      isPrettierPassed:
        value: ${{jobs.ci.outputs.isPrettierPassed}}
      isDatabasePassed:
        value: ${{jobs.ci.outputs.isDatabasePassed}}
      isPassed:
        value: ${{jobs.ci.outputs.isPassed}}

jobs:
  ci:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: ./.github/actions/base-setup

      - uses: ./.github/actions/install-dependencies
        with:
          pnpmKeysPrefix: ${{inputs.pnpmKeysPrefix}}
          pnpmPath: ${{inputs.pnpmPath}}

      - name: Code style
        id: format
        run: nx format:check ${{ inputs.flags }}

      - name: Lint
        id: lint
        run: nx affected --target=lint ${{ inputs.flags }}

      - name: Prisma Generation
        id: db
        run: nx generate-types db

      - name: Build
        id: build
        run: nx affected --target=build ${{ inputs.flags }}

    outputs:
      isBuildPassed: ${{steps.build.outcome == 'success'}}
      isLintPassed: ${{steps.lint.outcome == 'success'}}
      isPrettierPassed: ${{steps.format.outcome == 'success'}}
      isDatabasePassed: ${{steps.db.outcome == 'success'}}
      isPassed: ${{steps.build.outcome == 'success' && steps.lint.outcome == 'success' && steps.db.outcome == 'success' && steps.format.outcome == 'success'}}
